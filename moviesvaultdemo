<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Movies Vault - Watch & Download Latest Hollywood, Bollywood & South Movies</title>

  <!-- Primary Meta Tags -->
  <meta name="title" content="Movies Vault - Watch & Download Latest Movies">
  <meta name="description" content="Watch and download the latest Bollywood, Hollywood, and South Hindi dubbed movies online. Updated daily. 100% Working Links. Fast & Secure!">
  <meta name="keywords" content="Movies Vault, Movie Download, Watch Movies Online, Stream Movies, Bollywood Movies, Hollywood Movies, South Hindi Dubbed, Movies Vault 2025, moviesvault.fun">
  <meta name="author" content="Movies Vault">
  <meta name="robots" content="index, follow">
  <link rel="canonical" href="https://moviesvault.fun/" />

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website">
  <meta property="og:url" content="https://moviesvault.fun/">
  <meta property="og:title" content="Movies Vault - Watch & Download Latest Movies">
  <meta property="og:description" content="Stream and download the latest Bollywood, Hollywood, and South Hindi Dubbed movies. Fast servers. Telegram updates.">
  <meta property="og:image" content="https://moviesvault.fun/logo.png">

  <!-- Twitter -->
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:url" content="https://moviesvault.fun/">
  <meta name="twitter:title" content="Movies Vault - Watch & Download Latest Movies">
  <meta name="twitter:description" content="Stream and download the latest Bollywood, Hollywood, and South Hindi Dubbed movies online.">
  <meta name="twitter:image" content="https://moviesvault.fun/logo.png">

  <!-- Favicon -->
  <link rel="icon" href="favicon.ico" type="image/x-icon">

  <!-- Styles -->
  <style>
    :root {
      --primary: #28a745;
      --secondary: #1f1f1f;
      --dark: #121212;
      --light-dark: #333;
      --text: #fff;
      --text-secondary: #ccc;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Poppins', sans-serif;
    }

    body {
      background-color: var(--dark);
      color: var(--text);
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }

    /* Header Styles */
    header {
      background-color: var(--secondary);
      padding: 1rem 2rem;
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .logo-container {
      display: flex;
      justify-content: center;
    }

    .logo {
      max-height: 90px;
      width: auto;
    }
    .search-bar {
      display: flex;
      flex-direction: row;
      width: 100%;
      max-width: 600px;
      margin: 0 auto;
      gap: 0.5rem;
      flex-wrap: wrap;
    }

    #searchInput {
      flex: 1 1 60%;
      padding: 0.8rem;
      border-radius: 5px;
      border: none;
      background-color: var(--light-dark);
      color: var(--text);
      min-width: 0;
    }

    .search-bar button {
      flex: 0 0 auto;
      padding: 0.8rem 1.5rem;
      border: none;
      background-color: #228B22;
      color: white;
      border-radius: 5px;
      cursor: pointer;
      font-weight: 600;
    }

    /* Notice Box */
    .notice-box {
      background-color: #3b3b3b;
      color: #fff;
      text-align: center;
      padding: 0.5rem 1rem;
      margin: 1rem 0;
      border-radius: 5px;
    }

    .notice-box a {
      color: #f1d204;
      font-weight: bold;
      text-decoration: none;
    }

    .notice-box a:hover {
      text-decoration: underline;
    }

    /* Categories */
    .categories {
      display: flex;
      justify-content: center;
      gap: 1rem;
      flex-wrap: wrap;
      padding: 1rem 0;
    }

    .category-btn {
      padding: 0.5rem 1rem;
      border-radius: 20px;
      background-color: var(--light-dark);
      color: var(--text);
      border: none;
      cursor: pointer;
      transition: all 0.3s;
    }

    .category-btn.active {
      background-color: #228B22;
    }

    /* Movie Card Styles */
    .movie-card {
      background-color: var(--light-dark);
      border-radius: 8px;
      overflow: hidden;
      transition: all 0.3s ease;
      cursor: pointer;
      border: 1px solid var(--secondary);
      height: 100%;
      display: flex;
      flex-direction: column;
    }

    .movie-card img {
      width: 100%;
      height: 260px;
      object-fit: cover;
      object-position: center top;
    }

    .movie-info {
      padding: 0.6rem 0.5rem;
      flex: 1;
      display: flex;
      flex-direction: column;
      gap: 0.3rem;
    }

    .movie-card h3 {
      font-size: 1rem;
      margin: 0;
      color: var(--text);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      line-height: 1.3;
      text-decoration: none !important;
    }

    .movie-card p {
      font-size: 0.85rem;
      color: var(--text-secondary);
      margin-top: auto;
      opacity: 0.9;
      text-decoration: none !important;
    }

    .movie-card a {
      text-decoration: none !important;
      color: inherit;
    }

    /* Grid container */
    #movie-container {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(165px, 1fr));
      gap: 1.3rem;
      padding: 1.2rem;
    }

    /* Mobile Optimizations - Updated to match reference image */
    @media (max-width: 768px) {
      #movie-container {
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
        gap: 1rem;
        padding: 1rem;
      }
      
      .movie-card {
        background-color: var(--secondary);
        border-radius: 0;
        border: none;
      }
      
      .movie-card img {
        height: 220px;
        border-radius: 0;
        border-bottom: 2px solid var(--primary);
      }
      
      .movie-info {
        padding: 0.8rem 0.5rem;
      }
      
      .movie-card h3 {
        font-size: 0.95rem;
        text-align: left;
        font-weight: 500;
      }
      
      .movie-card p {
        text-align: left;
        font-size: 0.8rem;
      }
    }

    @media (max-width: 480px) {
      #movie-container {
        grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
      }
      
      .movie-card img {
        height: 200px;
      }
    }

    /* Pagination */
    .pagination {
      display: flex;
      justify-content: center;
      gap: 1rem;
      padding: 1rem 0;
      margin-top: auto;
    }

    .pagination button {
      padding: 0.5rem 1rem;
      background-color: #228B22;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    .pagination button:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    /* Footer */
    footer {
      background-color: var(--secondary);
      padding: 1.5rem;
      text-align: center;
      margin-top: auto;
    }

    .footer-nav {
      display: flex;
      justify-content: center;
      gap: 1.5rem;
      margin-top: 1rem;
      flex-wrap: wrap;
    }

    .footer-nav a {
      color: var(--text-secondary);
      text-decoration: none;
      transition: color 0.3s;
    }

    .footer-nav a:hover {
      color: var(--primary);
    }

    /* Movie Details Page Styles */
    .movie-details-container {
      max-width: 1200px;
      margin: 2rem auto;
      padding: 0 1rem;
    }

    .movie-wrapper {
      display: flex;
      flex-direction: column;
      gap: 2rem;
    }

    .movie-poster-container {
      text-align: center;
    }

    .detail-poster {
      max-width: 100%;
      height: auto;
      max-height: 70vh;
      border-radius: 12px;
      box-shadow: 0 8px 16px rgba(0,0,0,0.3);
    }

    .movie-content {
      color: #fff;
    }

    .movie-content h1 {
      font-size: 2rem;
      margin-bottom: 0.5rem;
    }

    .movie-year, .movie-genre {
      color: #aaa;
      margin-bottom: 0.5rem;
    }

    .movie-description {
      line-height: 1.6;
      margin: 1.5rem 0;
    }

    .action-buttons {
      display: flex;
      gap: 1rem;
      margin-top: 2rem;
    }

    .stream-btn, .download-btn {
      display: inline-block;
      padding: 12px 24px;
      border-radius: 6px;
      font-weight: 600;
      text-decoration: none;
      text-align: center;
      transition: all 0.3s ease;
      flex: 1;
    }

    .stream-btn {
      background-color: #228B22;
      color: white;
    }

    .download-btn {
      background-color: #2196F3;
      color: white;
      border: 1px solid #444;
    }

    .stream-btn:hover {
      background-color: #228B22;
      transform: translateY(-2px);
    }

    .download-btn:hover {
      background-color: #2196F3;
      transform: translateY(-2px);
    }

    /* Responsive Design */
    @media (min-width: 768px) {
      header {
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
      }

      .logo-container {
        justify-content: flex-start;
      }

      .search-bar {
        margin: 0;
      }

      /* Movie details page responsive */
      .movie-wrapper {
        flex-direction: row;
      }
      
      .movie-poster-container {
        flex: 0 0 40%;
        position: sticky;
        top: 20px;
        align-self: flex-start;
      }
      
      .movie-content {
        flex: 1;
      }
      
      .action-buttons {
        justify-content: flex-start;
      }
      
      .stream-btn, .download-btn {
        flex: 0 1 200px;
      }
    }

    @media (max-width: 767px) {
      /* Movie details page responsive */
      .action-buttons {
        flex-direction: column;
      }
      
      .stream-btn, .download-btn {
        width: 100%;
      }
    }

    @media (max-width: 480px) {
      .logo {
        max-height: 60px;
      }
    }

    /* Added Back Button Style - Only for movie.html */
    .back-btn {
      display: inline-block;
      padding: 0.5rem 1rem;
      background-color: #228B22;
      color: white;
      border-radius: 20px;
      text-decoration: none;
      font-weight: 600;
      transition: all 0.3s ease;
      margin-left: 1rem;
    }

    .back-btn:hover {
      background-color: #218838;
      transform: translateY(-1px);
    }

    @media (max-width: 768px) {
      .back-btn {
        margin: 0.5rem auto;
        display: block;
        width: fit-content;
      }
    }

    /* Error styles */
    .error {
      color: #ff6b6b;
      text-align: center;
      padding: 2rem;
    }

    /* Animation */
    .animate-fade-in {
      animation: fadeIn 0.5s ease-in;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
  </style>

  <!-- JSON-LD Schema -->
  <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "WebSite",
      "name": "Movies Vault",
      "url": "https://moviesvault.fun",
      "description": "Watch and download the latest Bollywood, Hollywood, and South Hindi dubbed movies online. Updated daily.",
      "publisher": {
        "@type": "Organization",
        "name": "Movies Vault",
        "logo": {
          "@type": "ImageObject",
          "url": "https://moviesvault.fun/logo.png"
        }
      }
    }
  </script>
</head>

<body>
  <header>
    <div class="logo-container">
      <a href="index.html"><img src="logo.png" alt="MoviesVault.HQ Logo" class="logo"></a>
    </div>
    <div class="search-bar">
      <input type="text" id="searchInput" placeholder="Search movies...">
      <button id="searchBtn">Search</button>
    </div>
  </header>

  <div class="categories">
    <button class="category-btn active" data-category="all">All</button>
    <button class="category-btn" data-category="hollywood">Hollywood</button>
    <button class="category-btn" data-category="bollywood">Bollywood</button>
    <button class="category-btn" data-category="south">South (Hindi Dubbed)</button>
    <button class="category-btn" data-category="recommended">Recommended</button>
  </div>

  <!-- Notice Box -->
  <div class="notice-box">
    <strong>Notice:</strong> For download click on movie poster, Join our 
    <a href="https://t.me/movievaulthq" target="_blank">Telegram Channel</a> for more updates.
  </div>

  <!-- Movie List -->
  <section id="movie-container">
    <!-- Movies will be loaded here dynamically -->
  </section>

  <!-- Pagination -->
  <div class="pagination" id="pagination">
    <button id="prevPage">Previous</button>
    <button id="nextPage">Next</button>
  </div>

  <!-- Footer -->
  <footer>
    <p>&copy; 2025 Movie Vault. All Rights Reserved.</p>
    <nav class="footer-nav">
      <a href="dmca.html">DMCA</a>
      <a href="request.html">Request</a>
      <a href="how-to-download.html">How to Download</a>
      <a href="contact.html">Contact</a>
      <a href="request-removal.html">Request Removal</a>
    </nav>
  </footer>

  <!-- Scripts -->
  <script>
    // Protect Assets
    document.addEventListener('contextmenu', e => e.preventDefault());
    document.addEventListener('keydown', e => {
      if (e.key === 'F12' || (e.ctrlKey && e.shiftKey && ['I', 'C', 'J'].includes(e.key.toUpperCase()))) {
        e.preventDefault();
      }
    });

    // DOM Elements
    const movieContainer = document.getElementById('movie-container');
    const searchInput = document.getElementById('searchInput');
    const searchBtn = document.getElementById('searchBtn');
    const categoryButtons = document.querySelectorAll('.category-btn');
    const paginationContainer = document.getElementById('pagination');
    const prevPageBtn = document.getElementById('prevPage');
    const nextPageBtn = document.getElementById('nextPage');

    let movies = [];
    let filteredMovies = [];
    let currentPage = 1;
    const itemsPerPage = 10; // Change this to control movies per page

    // Fetch Movies from Google Sheets
    async function fetchMovies() {
      try {
        const response = await fetch("https://opensheet.elk.sh/1oDtwyGB7ArzmWtP81I2QeBNXAiEefgTOepAHqwRfNZs/Sheet1");
        const data = await response.json();

        movies = data.reverse(); // Newest first
        filteredMovies = movies;
        renderMovies();
        renderPagination();
      } catch (error) {
        console.error('Error fetching movies:', error);
        movieContainer.innerHTML = '<p>Error loading movies. Please try again later.</p>';
      }
    }

    // Render Movies on Page
    function renderMovies() {
      const start = (currentPage - 1) * itemsPerPage;
      const end = start + itemsPerPage;
      const currentMovies = filteredMovies.slice(start, end);

      movieContainer.innerHTML = currentMovies.map(movie => `
        <div class="movie-card animate-fade-in">
          <a href="movie.html?id=${movie.id}">
            <img src="${movie.poster_url}" alt="${movie.title}" class="poster" onerror="this.src='placeholder.jpg'" oncontextmenu="return false;" draggable="false" />
            <h3>${movie.title} (${movie.year})</h3>
          </a>
        </div>
      `).join('');
    }

    // Search Function
    function handleSearch() {
      const query = searchInput.value.toLowerCase();
      filteredMovies = movies.filter(movie =>
        movie.title.toLowerCase().includes(query)
      );
      currentPage = 1;
      renderMovies();
      renderPagination();
    }

    searchInput.addEventListener('input', handleSearch);
    searchBtn.addEventListener('click', handleSearch);

    // Filter by Category
    categoryButtons.forEach(btn => {
      btn.addEventListener('click', () => {
        categoryButtons.forEach(b => b.classList.remove('active'));
        btn.classList.add('active');

        const category = btn.dataset.category;
        if (category === 'all') {
          filteredMovies = movies;
        } else {
          filteredMovies = movies.filter(movie =>
            movie.genre.toLowerCase().includes(category.toLowerCase())
          );
        }

        currentPage = 1;
        renderMovies();
        renderPagination();
      });
    });

    // Updated Pagination
    function renderPagination() {
      const totalPages = Math.ceil(filteredMovies.length / itemsPerPage);

      if (currentPage > totalPages) currentPage = 1;

      // Remove old page buttons
      const oldBtns = paginationContainer.querySelectorAll('.page-btn');
      oldBtns.forEach(btn => btn.remove());

      prevPageBtn.disabled = currentPage === 1;
      nextPageBtn.disabled = currentPage === totalPages;

      for (let i = 1; i <= totalPages; i++) {
        const btn = document.createElement('button');
        btn.textContent = i;
        btn.className = `page-btn ${i === currentPage ? 'active' : ''}`;
        btn.onclick = () => {
          currentPage = i;
          renderMovies();
          renderPagination();
        };
        paginationContainer.insertBefore(btn, nextPageBtn);
      }

      prevPageBtn.onclick = () => {
        if (currentPage > 1) {
          currentPage--;
          renderMovies();
          renderPagination();
        }
      };

      nextPageBtn.onclick = () => {
        if (currentPage < totalPages) {
          currentPage++;
          renderMovies();
          renderPagination();
        }
      };
    }

    // Initial Load
    fetchMovies();

    // Movie Details Page Functionality
    if (window.location.pathname.includes('movie.html')) {
      document.addEventListener("DOMContentLoaded", async function () {
        const movieDetails = document.getElementById("movie-details");
        const urlParams = new URLSearchParams(window.location.search);
        const movieId = urlParams.get("id");

        if (!movieId) {
          movieDetails.innerHTML = "<p class='error'>Movie ID not found in URL.</p>";
          return;
        }

        try {
          const response = await fetch("https://opensheet.elk.sh/1oDtwyGB7ArzmWtP81I2QeBNXAiEefgTOepAHqwRfNZs/Sheet1");
          const data = await response.json();

          const movie = data.find(m => m.id === movieId);

          if (!movie) throw new Error('Movie not found');

          // Update content
          document.getElementById('movie-poster').src = movie.poster_url;
          document.getElementById('movie-title').textContent = movie.title;
          document.getElementById('movie-year').textContent = `(${movie.year})`;
          document.getElementById('movie-genre').textContent = movie.genre;
          document.getElementById('movie-description').textContent = movie.description || 'No description available';

          const streamBtn = document.getElementById('stream-btn');
          const downloadBtn = document.getElementById('download-btn');

          if (movie.streamingLink) {
            streamBtn.href = movie.streamingLink;
            streamBtn.target = "_blank";
          } else {
            streamBtn.style.display = 'none';
          }

          if (movie.downloadLink) {
            downloadBtn.href = movie.downloadLink;
            downloadBtn.target = "_blank";
          } else {
            downloadBtn.style.display = 'none';
          }

          // Dynamic SEO Tags
          document.getElementById('seo-title').innerText = `${movie.title} (${movie.year}) | Movies Vault`;
          document.getElementById('seo-description').setAttribute("content", movie.description || "Stream or download this movie now on Movies Vault!");
          document.getElementById('canonical-link').setAttribute("href", window.location.href);

          document.getElementById('og-title').setAttribute("content", movie.title + " | Movies Vault");
          document.getElementById('og-description').setAttribute("content", movie.description || "Watch and download HD movies now.");
          document.getElementById('og-image').setAttribute("content", movie.poster_url);
          document.getElementById('og-url').setAttribute("content", window.location.href);

          document.getElementById('twitter-title').setAttribute("content", movie.title + " | Movies Vault");
          document.getElementById('twitter-description').setAttribute("content", movie.description || "Watch and download HD movies now.");
          document.getElementById('twitter-image').setAttribute("content", movie.poster_url);

          // JSON-LD Schema
          const schema = {
            "@context": "https://schema.org",
            "@type": "Movie",
            "name": movie.title,
            "image": movie.poster_url,
            "description": movie.description || "No description available",
            "datePublished": movie.year,
            "genre": movie.genre || "Movies",
            "url": window.location.href
          };
          const script = document.createElement('script');
          script.type = "application/ld+json";
          script.text = JSON.stringify(schema);
          document.head.appendChild(script);

        } catch (error) {
          console.error('Error loading movie:', error);
          movieDetails.innerHTML = `<div class="error">Error loading movie: ${error.message}</div>`;
        }
      });
    }
  </script>
</body>
</html>
